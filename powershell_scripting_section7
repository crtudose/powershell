# Execution policy needs to be in place first
3 types
- restricted - scripts will not run (default)
- remotesigned - locally created subscriptions will run
- allsigned - scripts will run if signed by trusted publisher
- unrestricted - all scripts will run regardless of who created them

Get-ExecutionPolicy
Set-ExecutionPolicy RemoteSigned # need admin rights

change directory - Set-Location command

Windows space utilization analysis using powershell
-------------------------
Get-PSDrive -PSProvider FileSystem
Get-WMIObject LogicalDisk

Invoke-Command -ComputerName vm1 -ScriptBlock {Get-PSDrive -PSProvider FileSystem}
Get-WmiObject -Class Win32_LogicalDisk | Select-Object DeviceID,Freespace

If you want to customize output with amount of free space in GB and %
Get-WmiObject -Class Win32_LogicalDisk | Select-Object @{'Name'='DriveName';'Expression'={$_.DeviceID}},@{'Name'='FreeSpace in GB';'Expression'={[math]::Round($_.FreeSpace/1GB)}}
Get-WmiObject -Class Win32_LogicalDisk | Select-Object @{'Name'='DriveName';'Expression'={$_.DeviceID}},@{'Name'='FreeSpace %';'Expression'={[math]::Round($_.FreeSpace/$_.size)/100)}}

Query a SQL server DB
--------------
Invoke-Sqlcmd - to connect and query the sql server db
Invoke-Sqlcmd -ServerInstance CENTRALSERVER -Query 'select name,state_desc,user_access_desc from sys.database'

Invoke-Sqlcmd -ServerInstance CENTRALSERVER -Query 'select name,state_desc,user_access_desc from sys.database' | ConvertTo-Html -as Table | Out-File C:\PS\datavasedetails.html
Invoke-Item C:\PS\datavasedetails.html

Invoke-Sqlcmd -ServerInstance CENTRALSERVER -Query 'select name,state_desc,user_access_desc from sys.database' | select * -ExcludeProperty ItemArray, Table, RowError, Rowstate, HasErrors | ConvertTo-Html -as Table | Out-File C:\PS\datavasedetails.html
Invoke-Item C:\PS\datavasedetails.html

# other tools: dbatools (Invoke-DBAQuery), sqlps

Send emails
-------------------
$password = ConvertTo-SecureString "mygmailpassword" -AsPlainText -Force
$Cred = New-Object System.Management.Automation.PSCredential ("username", $password)
Send-MailMessage -From 'tudose.cristian92@gmail.com' -To 'dr.andreeatudose@gmail.com' -Subject 'Alert' -SmtpServer smtp.gmail.com -port 587 -Body 'alert' -Credential $cred -UseSsl
